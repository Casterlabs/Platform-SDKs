// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: enums.proto
// Protobuf Java Version: 4.32.0

package co.casterlabs.sdk.tiktok.unsupported.types.protobuf.enums;

/**
 * Protobuf enum {@code TikTok.LinkMessageType}
 */
@com.google.protobuf.Generated
public enum LinkMessageType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>TYPE_LINKER_UNKNOWN = 0;</code>
   */
  TYPE_LINKER_UNKNOWN(0),
  /**
   * <code>TYPE_LINKER_CREATE = 1;</code>
   */
  TYPE_LINKER_CREATE(1),
  /**
   * <code>TYPE_LINKER_CLOSE = 2;</code>
   */
  TYPE_LINKER_CLOSE(2),
  /**
   * <code>TYPE_LINKER_INVITE = 3;</code>
   */
  TYPE_LINKER_INVITE(3),
  /**
   * <code>TYPE_LINKER_APPLY = 4;</code>
   */
  TYPE_LINKER_APPLY(4),
  /**
   * <code>TYPE_LINKER_REPLY = 5;</code>
   */
  TYPE_LINKER_REPLY(5),
  /**
   * <code>TYPE_LINKER_ENTER = 6;</code>
   */
  TYPE_LINKER_ENTER(6),
  /**
   * <code>TYPE_LINKER_LEAVE = 7;</code>
   */
  TYPE_LINKER_LEAVE(7),
  /**
   * <code>TYPE_LINKER_PERMIT = 8;</code>
   */
  TYPE_LINKER_PERMIT(8),
  /**
   * <code>TYPE_LINKER_CANCEL_INVITE = 9;</code>
   */
  TYPE_LINKER_CANCEL_INVITE(9),
  /**
   * <code>TYPE_LINKER_WAITING_LIST_CHANGE = 10;</code>
   */
  TYPE_LINKER_WAITING_LIST_CHANGE(10),
  /**
   * <code>TYPE_LINKER_LINKED_LIST_CHANGE = 11;</code>
   */
  TYPE_LINKER_LINKED_LIST_CHANGE(11),
  /**
   * <code>TYPE_LINKER_UPDATE_USER = 12;</code>
   */
  TYPE_LINKER_UPDATE_USER(12),
  /**
   * <code>TYPE_LINKER_KICK_OUT = 13;</code>
   */
  TYPE_LINKER_KICK_OUT(13),
  /**
   * <code>TYPE_LINKER_CANCEL_APPLY = 14;</code>
   */
  TYPE_LINKER_CANCEL_APPLY(14),
  /**
   * <code>TYPE_LINKER_MUTE = 15;</code>
   */
  TYPE_LINKER_MUTE(15),
  /**
   * <code>TYPE_LINKER_MATCH = 16;</code>
   */
  TYPE_LINKER_MATCH(16),
  /**
   * <code>TYPE_LINKER_UPDATE_USER_SETTING = 17;</code>
   */
  TYPE_LINKER_UPDATE_USER_SETTING(17),
  /**
   * <code>TYPE_LINKER_MIC_IDX_UPDATE = 18;</code>
   */
  TYPE_LINKER_MIC_IDX_UPDATE(18),
  /**
   * <code>TYPE_LINKER_LEAVE_V2 = 19;</code>
   */
  TYPE_LINKER_LEAVE_V2(19),
  /**
   * <code>TYPE_LINKER_WAITING_LIST_CHANGE_V2 = 20;</code>
   */
  TYPE_LINKER_WAITING_LIST_CHANGE_V2(20),
  /**
   * <code>TYPE_LINKER_LINKED_LIST_CHANGE_V2 = 21;</code>
   */
  TYPE_LINKER_LINKED_LIST_CHANGE_V2(21),
  /**
   * <code>TYPE_LINKER_COHOST_LIST_CHANGE = 22;</code>
   */
  TYPE_LINKER_COHOST_LIST_CHANGE(22),
  /**
   * <code>TYPE_LINKER_MEDIA_CHANGE = 23;</code>
   */
  TYPE_LINKER_MEDIA_CHANGE(23),
  /**
   * <code>TYPE_LINKER_ACCEPT_NOTICE = 24;</code>
   */
  TYPE_LINKER_ACCEPT_NOTICE(24),
  /**
   * <code>TYPE_LINKER_SYS_KICK_OUT = 101;</code>
   */
  TYPE_LINKER_SYS_KICK_OUT(101),
  /**
   * <code>TYPE_LINKMIC_USER_TOAST = 102;</code>
   */
  TYPE_LINKMIC_USER_TOAST(102),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 0,
      /* suffix= */ "",
      LinkMessageType.class.getName());
  }
  /**
   * <code>TYPE_LINKER_UNKNOWN = 0;</code>
   */
  public static final int TYPE_LINKER_UNKNOWN_VALUE = 0;
  /**
   * <code>TYPE_LINKER_CREATE = 1;</code>
   */
  public static final int TYPE_LINKER_CREATE_VALUE = 1;
  /**
   * <code>TYPE_LINKER_CLOSE = 2;</code>
   */
  public static final int TYPE_LINKER_CLOSE_VALUE = 2;
  /**
   * <code>TYPE_LINKER_INVITE = 3;</code>
   */
  public static final int TYPE_LINKER_INVITE_VALUE = 3;
  /**
   * <code>TYPE_LINKER_APPLY = 4;</code>
   */
  public static final int TYPE_LINKER_APPLY_VALUE = 4;
  /**
   * <code>TYPE_LINKER_REPLY = 5;</code>
   */
  public static final int TYPE_LINKER_REPLY_VALUE = 5;
  /**
   * <code>TYPE_LINKER_ENTER = 6;</code>
   */
  public static final int TYPE_LINKER_ENTER_VALUE = 6;
  /**
   * <code>TYPE_LINKER_LEAVE = 7;</code>
   */
  public static final int TYPE_LINKER_LEAVE_VALUE = 7;
  /**
   * <code>TYPE_LINKER_PERMIT = 8;</code>
   */
  public static final int TYPE_LINKER_PERMIT_VALUE = 8;
  /**
   * <code>TYPE_LINKER_CANCEL_INVITE = 9;</code>
   */
  public static final int TYPE_LINKER_CANCEL_INVITE_VALUE = 9;
  /**
   * <code>TYPE_LINKER_WAITING_LIST_CHANGE = 10;</code>
   */
  public static final int TYPE_LINKER_WAITING_LIST_CHANGE_VALUE = 10;
  /**
   * <code>TYPE_LINKER_LINKED_LIST_CHANGE = 11;</code>
   */
  public static final int TYPE_LINKER_LINKED_LIST_CHANGE_VALUE = 11;
  /**
   * <code>TYPE_LINKER_UPDATE_USER = 12;</code>
   */
  public static final int TYPE_LINKER_UPDATE_USER_VALUE = 12;
  /**
   * <code>TYPE_LINKER_KICK_OUT = 13;</code>
   */
  public static final int TYPE_LINKER_KICK_OUT_VALUE = 13;
  /**
   * <code>TYPE_LINKER_CANCEL_APPLY = 14;</code>
   */
  public static final int TYPE_LINKER_CANCEL_APPLY_VALUE = 14;
  /**
   * <code>TYPE_LINKER_MUTE = 15;</code>
   */
  public static final int TYPE_LINKER_MUTE_VALUE = 15;
  /**
   * <code>TYPE_LINKER_MATCH = 16;</code>
   */
  public static final int TYPE_LINKER_MATCH_VALUE = 16;
  /**
   * <code>TYPE_LINKER_UPDATE_USER_SETTING = 17;</code>
   */
  public static final int TYPE_LINKER_UPDATE_USER_SETTING_VALUE = 17;
  /**
   * <code>TYPE_LINKER_MIC_IDX_UPDATE = 18;</code>
   */
  public static final int TYPE_LINKER_MIC_IDX_UPDATE_VALUE = 18;
  /**
   * <code>TYPE_LINKER_LEAVE_V2 = 19;</code>
   */
  public static final int TYPE_LINKER_LEAVE_V2_VALUE = 19;
  /**
   * <code>TYPE_LINKER_WAITING_LIST_CHANGE_V2 = 20;</code>
   */
  public static final int TYPE_LINKER_WAITING_LIST_CHANGE_V2_VALUE = 20;
  /**
   * <code>TYPE_LINKER_LINKED_LIST_CHANGE_V2 = 21;</code>
   */
  public static final int TYPE_LINKER_LINKED_LIST_CHANGE_V2_VALUE = 21;
  /**
   * <code>TYPE_LINKER_COHOST_LIST_CHANGE = 22;</code>
   */
  public static final int TYPE_LINKER_COHOST_LIST_CHANGE_VALUE = 22;
  /**
   * <code>TYPE_LINKER_MEDIA_CHANGE = 23;</code>
   */
  public static final int TYPE_LINKER_MEDIA_CHANGE_VALUE = 23;
  /**
   * <code>TYPE_LINKER_ACCEPT_NOTICE = 24;</code>
   */
  public static final int TYPE_LINKER_ACCEPT_NOTICE_VALUE = 24;
  /**
   * <code>TYPE_LINKER_SYS_KICK_OUT = 101;</code>
   */
  public static final int TYPE_LINKER_SYS_KICK_OUT_VALUE = 101;
  /**
   * <code>TYPE_LINKMIC_USER_TOAST = 102;</code>
   */
  public static final int TYPE_LINKMIC_USER_TOAST_VALUE = 102;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static LinkMessageType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static LinkMessageType forNumber(int value) {
    switch (value) {
      case 0: return TYPE_LINKER_UNKNOWN;
      case 1: return TYPE_LINKER_CREATE;
      case 2: return TYPE_LINKER_CLOSE;
      case 3: return TYPE_LINKER_INVITE;
      case 4: return TYPE_LINKER_APPLY;
      case 5: return TYPE_LINKER_REPLY;
      case 6: return TYPE_LINKER_ENTER;
      case 7: return TYPE_LINKER_LEAVE;
      case 8: return TYPE_LINKER_PERMIT;
      case 9: return TYPE_LINKER_CANCEL_INVITE;
      case 10: return TYPE_LINKER_WAITING_LIST_CHANGE;
      case 11: return TYPE_LINKER_LINKED_LIST_CHANGE;
      case 12: return TYPE_LINKER_UPDATE_USER;
      case 13: return TYPE_LINKER_KICK_OUT;
      case 14: return TYPE_LINKER_CANCEL_APPLY;
      case 15: return TYPE_LINKER_MUTE;
      case 16: return TYPE_LINKER_MATCH;
      case 17: return TYPE_LINKER_UPDATE_USER_SETTING;
      case 18: return TYPE_LINKER_MIC_IDX_UPDATE;
      case 19: return TYPE_LINKER_LEAVE_V2;
      case 20: return TYPE_LINKER_WAITING_LIST_CHANGE_V2;
      case 21: return TYPE_LINKER_LINKED_LIST_CHANGE_V2;
      case 22: return TYPE_LINKER_COHOST_LIST_CHANGE;
      case 23: return TYPE_LINKER_MEDIA_CHANGE;
      case 24: return TYPE_LINKER_ACCEPT_NOTICE;
      case 101: return TYPE_LINKER_SYS_KICK_OUT;
      case 102: return TYPE_LINKMIC_USER_TOAST;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<LinkMessageType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      LinkMessageType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<LinkMessageType>() {
          public LinkMessageType findValueByNumber(int number) {
            return LinkMessageType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return co.casterlabs.sdk.tiktok.unsupported.types.protobuf.enums.Enums.getDescriptor().getEnumTypes().get(24);
  }

  private static final LinkMessageType[] VALUES = values();

  public static LinkMessageType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private LinkMessageType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:TikTok.LinkMessageType)
}

