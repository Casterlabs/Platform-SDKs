// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: enums.proto
// Protobuf Java Version: 4.32.0

package co.casterlabs.sdk.tiktok.unsupported.types.protobuf.enums;

/**
 * Protobuf enum {@code TikTok.ReplyStatus}
 */
@com.google.protobuf.Generated
public enum ReplyStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>REPLY_STATUS_UNKNOWN = 0;</code>
   */
  REPLY_STATUS_UNKNOWN(0),
  /**
   * <code>REPLY_STATUS_AGREE = 1;</code>
   */
  REPLY_STATUS_AGREE(1),
  /**
   * <code>REPLY_STATUS_REFUSE_PERSONALLY = 2;</code>
   */
  REPLY_STATUS_REFUSE_PERSONALLY(2),
  /**
   * <code>REPLY_STATUS_REFUSE_TYPE_NOT_SUPPORT = 3;</code>
   */
  REPLY_STATUS_REFUSE_TYPE_NOT_SUPPORT(3),
  /**
   * <code>REPLY_STATUS_REFUSE_PROCESSING_INVITATION = 4;</code>
   */
  REPLY_STATUS_REFUSE_PROCESSING_INVITATION(4),
  /**
   * <code>REPLY_STATUS_REFUSE_BY_TIMEOUT = 5;</code>
   */
  REPLY_STATUS_REFUSE_BY_TIMEOUT(5),
  /**
   * <code>REPLY_STATUS_REFUSE_EXCEPTION = 6;</code>
   */
  REPLY_STATUS_REFUSE_EXCEPTION(6),
  /**
   * <code>REPLY_STATUS_REFUSE_SYSTEM_NOT_SUPPORTED = 7;</code>
   */
  REPLY_STATUS_REFUSE_SYSTEM_NOT_SUPPORTED(7),
  /**
   * <code>REPLY_STATUS_REFUSE_SUBTYPE_DIFFERENCE = 8;</code>
   */
  REPLY_STATUS_REFUSE_SUBTYPE_DIFFERENCE(8),
  /**
   * <code>REPLY_STATUS_REFUSE_IN_MICROOM = 9;</code>
   */
  REPLY_STATUS_REFUSE_IN_MICROOM(9),
  /**
   * <code>REPLY_STATUS_REFUSE_NOT_LOAD_PLUGIN = 10;</code>
   */
  REPLY_STATUS_REFUSE_NOT_LOAD_PLUGIN(10),
  /**
   * <code>REPLY_STATUS_REFUSE_IN_MULTI_GUEST = 11;</code>
   */
  REPLY_STATUS_REFUSE_IN_MULTI_GUEST(11),
  /**
   * <code>REPLY_STATUS_REFUSE_PAUSE_LIVE = 12;</code>
   */
  REPLY_STATUS_REFUSE_PAUSE_LIVE(12),
  /**
   * <code>REPLY_STATUS_REFUSE_OPEN_CAMERA_DIALOG_SHOWING = 13;</code>
   */
  REPLY_STATUS_REFUSE_OPEN_CAMERA_DIALOG_SHOWING(13),
  /**
   * <code>REPLY_STATUS_REFUSE_DRAW_GUESSING = 14;</code>
   */
  REPLY_STATUS_REFUSE_DRAW_GUESSING(14),
  /**
   * <code>REPLY_STATUS_REFUSE_RANDOM_MATCHING = 15;</code>
   */
  REPLY_STATUS_REFUSE_RANDOM_MATCHING(15),
  /**
   * <code>REPLY_STATUS_REFUSE_IN_MATCH_PROCESSING = 16;</code>
   */
  REPLY_STATUS_REFUSE_IN_MATCH_PROCESSING(16),
  /**
   * <code>REPLY_STATUS_REFUSE_IN_MICROOM_FOR_MULTI_COHOST = 17;</code>
   */
  REPLY_STATUS_REFUSE_IN_MICROOM_FOR_MULTI_COHOST(17),
  /**
   * <code>REPLY_STATUS_REFUSE_COHOST_FINISHED = 18;</code>
   */
  REPLY_STATUS_REFUSE_COHOST_FINISHED(18),
  /**
   * <code>REPLY_STATUS_REFUSE_NOT_CONNECTED = 19;</code>
   */
  REPLY_STATUS_REFUSE_NOT_CONNECTED(19),
  /**
   * <code>REPLY_STATUS_REFUSE_LINKMIC_FULL = 20;</code>
   */
  REPLY_STATUS_REFUSE_LINKMIC_FULL(20),
  /**
   * <code>REPLY_STATUS_REFUSE_ARC_INCOMPATIBLE = 21;</code>
   */
  REPLY_STATUS_REFUSE_ARC_INCOMPATIBLE(21),
  /**
   * <code>REPLY_STATUS_REFUSE_PROCESSING_OTHER_INVITE = 22;</code>
   */
  REPLY_STATUS_REFUSE_PROCESSING_OTHER_INVITE(22),
  /**
   * <code>REPLY_STATUS_REFUSE_PROCESSING_OTHER_APPLY = 23;</code>
   */
  REPLY_STATUS_REFUSE_PROCESSING_OTHER_APPLY(23),
  /**
   * <code>REPLY_STATUS_REFUSE_IN_ANCHOR_COHOST = 24;</code>
   */
  REPLY_STATUS_REFUSE_IN_ANCHOR_COHOST(24),
  /**
   * <code>REPLY_STATUS_REFUSE_TOPIC_PAIRING = 25;</code>
   */
  REPLY_STATUS_REFUSE_TOPIC_PAIRING(25),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 0,
      /* suffix= */ "",
      ReplyStatus.class.getName());
  }
  /**
   * <code>REPLY_STATUS_UNKNOWN = 0;</code>
   */
  public static final int REPLY_STATUS_UNKNOWN_VALUE = 0;
  /**
   * <code>REPLY_STATUS_AGREE = 1;</code>
   */
  public static final int REPLY_STATUS_AGREE_VALUE = 1;
  /**
   * <code>REPLY_STATUS_REFUSE_PERSONALLY = 2;</code>
   */
  public static final int REPLY_STATUS_REFUSE_PERSONALLY_VALUE = 2;
  /**
   * <code>REPLY_STATUS_REFUSE_TYPE_NOT_SUPPORT = 3;</code>
   */
  public static final int REPLY_STATUS_REFUSE_TYPE_NOT_SUPPORT_VALUE = 3;
  /**
   * <code>REPLY_STATUS_REFUSE_PROCESSING_INVITATION = 4;</code>
   */
  public static final int REPLY_STATUS_REFUSE_PROCESSING_INVITATION_VALUE = 4;
  /**
   * <code>REPLY_STATUS_REFUSE_BY_TIMEOUT = 5;</code>
   */
  public static final int REPLY_STATUS_REFUSE_BY_TIMEOUT_VALUE = 5;
  /**
   * <code>REPLY_STATUS_REFUSE_EXCEPTION = 6;</code>
   */
  public static final int REPLY_STATUS_REFUSE_EXCEPTION_VALUE = 6;
  /**
   * <code>REPLY_STATUS_REFUSE_SYSTEM_NOT_SUPPORTED = 7;</code>
   */
  public static final int REPLY_STATUS_REFUSE_SYSTEM_NOT_SUPPORTED_VALUE = 7;
  /**
   * <code>REPLY_STATUS_REFUSE_SUBTYPE_DIFFERENCE = 8;</code>
   */
  public static final int REPLY_STATUS_REFUSE_SUBTYPE_DIFFERENCE_VALUE = 8;
  /**
   * <code>REPLY_STATUS_REFUSE_IN_MICROOM = 9;</code>
   */
  public static final int REPLY_STATUS_REFUSE_IN_MICROOM_VALUE = 9;
  /**
   * <code>REPLY_STATUS_REFUSE_NOT_LOAD_PLUGIN = 10;</code>
   */
  public static final int REPLY_STATUS_REFUSE_NOT_LOAD_PLUGIN_VALUE = 10;
  /**
   * <code>REPLY_STATUS_REFUSE_IN_MULTI_GUEST = 11;</code>
   */
  public static final int REPLY_STATUS_REFUSE_IN_MULTI_GUEST_VALUE = 11;
  /**
   * <code>REPLY_STATUS_REFUSE_PAUSE_LIVE = 12;</code>
   */
  public static final int REPLY_STATUS_REFUSE_PAUSE_LIVE_VALUE = 12;
  /**
   * <code>REPLY_STATUS_REFUSE_OPEN_CAMERA_DIALOG_SHOWING = 13;</code>
   */
  public static final int REPLY_STATUS_REFUSE_OPEN_CAMERA_DIALOG_SHOWING_VALUE = 13;
  /**
   * <code>REPLY_STATUS_REFUSE_DRAW_GUESSING = 14;</code>
   */
  public static final int REPLY_STATUS_REFUSE_DRAW_GUESSING_VALUE = 14;
  /**
   * <code>REPLY_STATUS_REFUSE_RANDOM_MATCHING = 15;</code>
   */
  public static final int REPLY_STATUS_REFUSE_RANDOM_MATCHING_VALUE = 15;
  /**
   * <code>REPLY_STATUS_REFUSE_IN_MATCH_PROCESSING = 16;</code>
   */
  public static final int REPLY_STATUS_REFUSE_IN_MATCH_PROCESSING_VALUE = 16;
  /**
   * <code>REPLY_STATUS_REFUSE_IN_MICROOM_FOR_MULTI_COHOST = 17;</code>
   */
  public static final int REPLY_STATUS_REFUSE_IN_MICROOM_FOR_MULTI_COHOST_VALUE = 17;
  /**
   * <code>REPLY_STATUS_REFUSE_COHOST_FINISHED = 18;</code>
   */
  public static final int REPLY_STATUS_REFUSE_COHOST_FINISHED_VALUE = 18;
  /**
   * <code>REPLY_STATUS_REFUSE_NOT_CONNECTED = 19;</code>
   */
  public static final int REPLY_STATUS_REFUSE_NOT_CONNECTED_VALUE = 19;
  /**
   * <code>REPLY_STATUS_REFUSE_LINKMIC_FULL = 20;</code>
   */
  public static final int REPLY_STATUS_REFUSE_LINKMIC_FULL_VALUE = 20;
  /**
   * <code>REPLY_STATUS_REFUSE_ARC_INCOMPATIBLE = 21;</code>
   */
  public static final int REPLY_STATUS_REFUSE_ARC_INCOMPATIBLE_VALUE = 21;
  /**
   * <code>REPLY_STATUS_REFUSE_PROCESSING_OTHER_INVITE = 22;</code>
   */
  public static final int REPLY_STATUS_REFUSE_PROCESSING_OTHER_INVITE_VALUE = 22;
  /**
   * <code>REPLY_STATUS_REFUSE_PROCESSING_OTHER_APPLY = 23;</code>
   */
  public static final int REPLY_STATUS_REFUSE_PROCESSING_OTHER_APPLY_VALUE = 23;
  /**
   * <code>REPLY_STATUS_REFUSE_IN_ANCHOR_COHOST = 24;</code>
   */
  public static final int REPLY_STATUS_REFUSE_IN_ANCHOR_COHOST_VALUE = 24;
  /**
   * <code>REPLY_STATUS_REFUSE_TOPIC_PAIRING = 25;</code>
   */
  public static final int REPLY_STATUS_REFUSE_TOPIC_PAIRING_VALUE = 25;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ReplyStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ReplyStatus forNumber(int value) {
    switch (value) {
      case 0: return REPLY_STATUS_UNKNOWN;
      case 1: return REPLY_STATUS_AGREE;
      case 2: return REPLY_STATUS_REFUSE_PERSONALLY;
      case 3: return REPLY_STATUS_REFUSE_TYPE_NOT_SUPPORT;
      case 4: return REPLY_STATUS_REFUSE_PROCESSING_INVITATION;
      case 5: return REPLY_STATUS_REFUSE_BY_TIMEOUT;
      case 6: return REPLY_STATUS_REFUSE_EXCEPTION;
      case 7: return REPLY_STATUS_REFUSE_SYSTEM_NOT_SUPPORTED;
      case 8: return REPLY_STATUS_REFUSE_SUBTYPE_DIFFERENCE;
      case 9: return REPLY_STATUS_REFUSE_IN_MICROOM;
      case 10: return REPLY_STATUS_REFUSE_NOT_LOAD_PLUGIN;
      case 11: return REPLY_STATUS_REFUSE_IN_MULTI_GUEST;
      case 12: return REPLY_STATUS_REFUSE_PAUSE_LIVE;
      case 13: return REPLY_STATUS_REFUSE_OPEN_CAMERA_DIALOG_SHOWING;
      case 14: return REPLY_STATUS_REFUSE_DRAW_GUESSING;
      case 15: return REPLY_STATUS_REFUSE_RANDOM_MATCHING;
      case 16: return REPLY_STATUS_REFUSE_IN_MATCH_PROCESSING;
      case 17: return REPLY_STATUS_REFUSE_IN_MICROOM_FOR_MULTI_COHOST;
      case 18: return REPLY_STATUS_REFUSE_COHOST_FINISHED;
      case 19: return REPLY_STATUS_REFUSE_NOT_CONNECTED;
      case 20: return REPLY_STATUS_REFUSE_LINKMIC_FULL;
      case 21: return REPLY_STATUS_REFUSE_ARC_INCOMPATIBLE;
      case 22: return REPLY_STATUS_REFUSE_PROCESSING_OTHER_INVITE;
      case 23: return REPLY_STATUS_REFUSE_PROCESSING_OTHER_APPLY;
      case 24: return REPLY_STATUS_REFUSE_IN_ANCHOR_COHOST;
      case 25: return REPLY_STATUS_REFUSE_TOPIC_PAIRING;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ReplyStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ReplyStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ReplyStatus>() {
          public ReplyStatus findValueByNumber(int number) {
            return ReplyStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return co.casterlabs.sdk.tiktok.unsupported.types.protobuf.enums.Enums.getDescriptor().getEnumTypes().get(11);
  }

  private static final ReplyStatus[] VALUES = values();

  public static ReplyStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ReplyStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:TikTok.ReplyStatus)
}

